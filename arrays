
Q1.write a program in following steps
a)generate 1o random 3 digit nos
b)store this num into array
c)find 2nd largest and 3nd smallest num without sorting.

#!/bin/bash 

for j in {0..9}
do
        randomNumber=$(( RANDOM%1000 ))
        arr[$j]=$randomNumber
done
echo ${arr[@]}
min=${arr[0]}
max=${arr[0]}
secmax=${arr[0]}
secmin=${arr[0]}

for value in "${arr[@]}"
do
        if [ $value -gt $max ]
        then
          max=$value
        elif [ $value -lt $min ]
        then
          min=$value
        fi
done
echo  "max="$max " min="$min
for i in "${arr[@]}"
do
        if [ $i -gt $secmax ] && [ $i -lt $max ]
        then
          secmax=$i
        elif [ $i -lt $secmin ] && [ $i -gt $min ]
        then
          secmin=$i
        fi
done
echo "second max="$secmax "seccond min="$secmin

output:
819 510 558 576 897 166 673 243 335 700
max=897  min=166
second max=819 seccond min=243



Q2.Extend above program to sort the array and then find 2nd largest and 2nd smallest element.


#!/bin/bash 

for j in {0..9}
do
        randomNumber=$(( RANDOM%1000 ))
        arr[$j]=$randomNumber
done
        echo ${arr[@]}

for (( i=0;i<=$((${#arr[@]}-1));i++ ))
do
for ((j=((i+1)); j<=$((${#arr[@]}-1)) ;j++ ))
do
     if [[ ${arr[i]} -gt ${arr[j]} ]]
     then
        temp=${arr[i]}
        arr[i]=${arr[j]}
        arr[j]=$temp
     fi
done
done
l=$((${#arr[@]}-2))
echo ${arr[@]}
echo "second largest="${arr[1]}
echo "second smallest="${arr[l]}


output:
497 333 329 769 991 610 975 200 63 211
63 200 211 329 333 497 610 769 975 991
second largest=200
second smallest=975

Q3. Extend the prime factorization program to store all the numbers into an array and finally display the outtput.

read -p "enter number:" n
j=0
for ((i=2;n>1;i++))
do
while [ $(( n%i )) -eq 0 ]
do
        arr[j]=$i
        n=$(( n/i ))
        ((j++))
done
done
echo ${arr[@]}

output:
enter number:36
2 2 3 3


Q4.Write a program to show sum of three integers adds to zero.

#!/bin/bash

sum=0
arr=(1 4 5 3 10 8 -1 3 -6 )

for (( i=0;i<=$((${#arr[@]}-1));i++ ))
do
for ((j=((i+1)); j<=$((${#arr[@]}-1)) ;j++ ))
do
     if [[ ${arr[i]} -gt ${arr[j]} ]]
     then
        temp=${arr[i]}
        arr[i]=${arr[j]}
        arr[j]=$temp
     fi
done
done
echo ${arr[@]}


for  ((i=0;i<${#arr[@]};i++))
do
        start=$((i+1))
        end=$((${#arr[@]}-1))

while  [ $start -lt $end ]
do
        if [ $(( ${arr[i]} + ${arr[start]} + ${arr[end]} )) -eq $sum ]
        then
           echo ${arr[i]} " "${arr[start]}" "${arr[end]}
           ((start++))
           ((end--))
        elif [ $(( ${arr[i]} + ${arr[start]} + ${arr[end]} )) -lt $sum ]
        then
            ((start++))
        elif [ $(( ${arr[i]} + ${arr[start]} + ${arr[end]} )) -gt $sum ]
        then
            ((end--))
        fi

done
done

output:arr=(1 4 5 3 10 8 -1 3 -6 )
-6 -1 1 3 3 4 5 8 10           ...#sorted array
 -6 1 5            
 -6 3 3            



Q5.Take a range from 0-100 find the digits that are repeated twice like 33,77,etc and store it into array.

#!/bin/bash

read -p "enter 1st number=" num1
read -p "enter 2nd number=" num2


for ((i=$num1;i<=$num2;i++))
  do
        if [ $i -eq 0 ]
        then
          continue
        fi
     if [ $((i%11)) -eq 0 ]
      then
        echo $i
      fi
  done


output:
enter 1st number=1
enter 2nd number=90
11
22
33
44
55
66
77
88


























